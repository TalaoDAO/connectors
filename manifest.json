{
  "name": "Wallet Connectors MCP Server",
  "id": "wallet-connectors",
  "version": "1.0.0",
  "protocolVersion": "2025-06-18",
  "description": "MCP server that bridges EUDI-compliant data wallets (OIDC4VP) with AI agents via secure JSON-RPC tools.",
  "homepage": "https://wallet-connectors.com",
  "license": "Apache 2.0",
  "maintainer": {
    "name": "Web3 Digital Wallet",
    "url": "https://talao.io"
  },
  "endpoints": {
    "rpc": {
      "type": "http",
      "url": "https://wallet-connectors.com/mcp"
    },
    "info": {
      "type": "http",
      "url": "https://wallet-connectors.com/mcp/info"
    },
    "healthz": {
      "type": "http",
      "url": "https://wallet-connectors.com/mcp/healthz"
    }
  },
  "auth": {
    "type": "api_key",
    "header": "X-API-KEY",
    "example": "0000"
  },
  "tools": [
    {
      "name": "get_supported_scopes",
      "description": "List supported scopes and verifier profiles.",
      "inputSchema": {
        "type": "object",
        "properties": {}
      }
    },
    {
      "name": "start_wallet_verification",
      "description": "Start an OIDC4VP wallet verification flow and return a QR/deeplink.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "verifier_id": {
            "type": "string",
            "description": "Verifier identifier (e.g. 0000)"
          },
          "scope": {
            "type": "string",
            "enum": ["email", "phone", "profile", "over18", "custom", "wallet_identifier", "raw"]
          },
          "session_id": { "type": "string" }
        },
        "required": ["verifier_id", "scope"]
      }
    },
    {
      "name": "poll_wallet_verification",
      "description": "Poll the current verification status of a session.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "session_id": { "type": "string" }
        },
        "required": ["session_id"]
      }
    },
    {
      "name": "revoke_wallet_flow",
      "description": "Acknowledge cleanup for a session.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "session_id": { "type": "string" }
        },
        "required": ["session_id"]
      }
    }
  ]
}
